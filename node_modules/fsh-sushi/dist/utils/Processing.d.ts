import { FHIRDefinitions } from '../fhirdefs';
import { FSHTank, RawFSH } from '../import';
import { Package } from '../export';
import { Configuration } from '../fshtypes';
import { ImplementationGuideDependsOn } from '../fhirtypes';
declare type AutomaticDependency = {
    packageId: string;
    version: string;
    fhirVersion?: RegExp;
};
export declare const AUTOMATIC_DEPENDENCIES: AutomaticDependency[];
export declare function isSupportedFHIRVersion(version: string): boolean;
export declare function ensureInputDir(input: string): string;
export declare function hasFshFiles(path: string): boolean;
export declare function findInputDir(input: string): string;
export declare function ensureOutputDir(input: string, output: string): string;
export declare function readConfig(input: string): Configuration;
export declare function updateExternalDependencies(config: Configuration): Promise<boolean>;
export declare function loadExternalDependencies(defs: FHIRDefinitions, config: Configuration): Promise<void>;
export declare function loadAutomaticDependencies(fhirVersion: string, configuredDependencies: ImplementationGuideDependsOn[], defs: FHIRDefinitions): Promise<void>;
export declare function getRawFSHes(input: string): RawFSH[];
export declare function fillTank(rawFSHes: RawFSH[], config: Configuration): FSHTank;
export declare function checkNullValuesOnArray(resource: any, parentName?: string, priorPath?: string): void;
export declare function writeFHIRResources(outDir: string, outPackage: Package, defs: FHIRDefinitions, snapshot: boolean): void;
export declare function writePreprocessedFSH(outDir: string, inDir: string, tank: FSHTank): void;
/**
 * Initializes an empty sample FSH within a user specified subdirectory of the current working directory
 */
export declare function init(): Promise<void>;
export declare function getFilesRecursive(dir: string): string[];
export declare function getLocalSushiVersion(): string;
export declare function getLatestSushiVersion(): Promise<string | undefined>;
export declare function checkSushiVersion(): Promise<{
    latest: string | undefined;
    current: string;
}>;
export {};
