import { ContactDetail, UsageContext } from './metaDataTypes';
import { BackboneElement, CodeableConcept, Coding, DomainResource, Extension, Reference } from './dataTypes';
export declare type ImplementationGuide = DomainResource & {
    resourceType: 'ImplementationGuide';
    url: string;
    version?: string;
    name: string;
    title?: string;
    status: ImplementationGuideStatus;
    experimental?: boolean;
    date?: string;
    publisher?: string;
    contact?: ContactDetail[];
    description?: string;
    useContext?: UsageContext[];
    jurisdiction?: CodeableConcept[];
    copyright?: string;
    copyrightLabel?: string;
    versionAlgorithmString?: string;
    versionAlgorithmCoding?: Coding;
    packageId: string;
    license?: string;
    fhirVersion: string[];
    dependsOn?: ImplementationGuideDependsOn[];
    global?: ImplementationGuideGlobal[];
    definition?: ImplementationGuideDefinition;
    manifest?: ImplementationGuideManifest;
};
export declare type ImplementationGuideStatus = 'draft' | 'active' | 'retired' | 'unknown';
export declare type ImplementationGuideDependsOn = BackboneElement & {
    uri?: string;
    packageId?: string;
    version?: string;
    reason?: string;
};
export declare type ImplementationGuideGlobal = {
    type: string;
    profile: string;
};
export declare type ImplementationGuideDefinition = {
    grouping?: ImplementationGuideDefinitionGrouping[];
    resource: ImplementationGuideDefinitionResource[];
    page?: ImplementationGuideDefinitionPage;
    parameter?: ImplementationGuideDefinitionParameter[];
    template?: ImplementationGuideDefinitionTemplate[];
};
export declare type ImplementationGuideDefinitionGrouping = {
    id: string;
    name: string;
    description?: string;
};
export declare type ImplementationGuideDefinitionResource = {
    reference?: Reference;
    fhirVersion?: string[];
    name?: string;
    description?: string;
    exampleBoolean?: boolean;
    exampleCanonical?: string;
    isExample?: boolean;
    profile?: string[];
    groupingId?: string;
    extension?: Extension[];
    _linkRef?: string;
};
export declare type ImplementationGuideDefinitionPage = {
    nameUrl?: string;
    nameReference?: Reference;
    name?: string;
    title?: string;
    generation?: ImplementationGuideDefinitionPageGeneration;
    extension?: Extension[];
    modifierExtension?: Extension[];
    sourceUrl?: string;
    sourceString?: string;
    sourceMarkdown?: string;
    page?: ImplementationGuideDefinitionPage[];
};
export declare type ImplementationGuideDefinitionPageGeneration = 'html' | 'markdown' | 'xml' | 'generated';
export declare type ImplementationGuideDefinitionParameter = {
    code: string | Coding;
    extension?: Extension[];
    value: string;
};
export declare type ImplementationGuideDefinitionTemplate = {
    code: string;
    source: string;
    scope?: string;
};
export declare type ImplementationGuideManifest = {
    rendering?: string;
    resource: ImplementationGuideManifestResource[];
    page?: ImplementationGuideManifestPage[];
    image?: string[];
    other?: string[];
};
export declare type ImplementationGuideManifestResource = {
    reference: Reference;
    exampleBoolean?: boolean;
    exampleCanonical?: string;
    relativePath?: string;
};
export declare type ImplementationGuideManifestPage = {
    name: string;
    title?: string;
    anchor?: string[];
};
